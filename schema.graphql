#########################
# == Helper Entities == #
#########################

type Metadata @entity {
  id: ID!
  protocol: Int!,
  pointer: String!
}

type Role @entity {
  id: Bytes!
  accounts: [RoleAccount!] @derivedFrom(field: "role")
}

type Account @entity {
  id: Bytes!
  roles: [RoleAccount!] @derivedFrom(field: "account")
}

# id = `${account.id}-${role.id}`
type RoleAccount @entity {
  id: ID!
  role: Role!
  account: Account!
}

########################
# ===== Registry ===== #
########################

# id = profileId
type Profile @entity {
  id: ID!
  name: String!
  metadata: Metadata!
  anchor: Bytes!
  nonce: BigInt!
  owner: Account!
  memberRole: Role!
  createdAt: BigInt!
  updatedAt: BigInt!
}

####################
# ===== Allo ===== #
####################

# id = 0
type Allo @entity {
  id: ID!
  registry: Bytes
  feePercentage: BigInt
  baseFee: BigInt
  treasury: Bytes
  cloneableStrategies: [Bytes!]
}

# id = poolId
type Pool @entity {
  id: ID!
  allo: Allo!
  token: Bytes!
  amount : BigInt!
  strategy: Bytes!
  metadata: Metadata!
  adminRole: Bytes!
  managerRole: Bytes!
  owner: Account!
  members: [Account!]
  createdAt: BigInt!
  updatedAt: BigInt!
}

####################
# == Strategies == #
####################

# NOTE: WIP

# id = strategyAddress.toHex()
interface Strategy @entity {
  id: ID!
  pool: Pool!
  metadata: Metadata!
  owner: Account!
  members: [Account!]
  createdAt: BigInt!
  updatedAt: BigInt!
}

# id = strategyAddress.toHex()
type DonationVotingMerkleDistribution implements Strategy @entity {
  id: ID!
  strategyName: String!
  strategyAddress: String!
  pool: Pool!
  metadata: Metadata!
  owner: Account!
  members: [Account!]
  createdAt: BigInt!
  updatedAt: BigInt!
}

# id = strategyAddress.toHex()
type DirectGrantsSimple implements Strategy @entity {
  id: ID!
  strategyName: String!
  strategyAddress: String!
  pool: Pool!
  metadata: Metadata!
  owner: Account!
  members: [Account!]
  createdAt: BigInt!
  updatedAt: BigInt!
}

# TODO: the id
type PayoutSummary @entity {
  id: ID!
  recipientAddress: String!
  amount: BigInt!
}

type ApplicationStatus @entity {
  id: ID!
  status: String!
}

type Claim @entity {
  id: ID!
  recipientAddress: String!
  token: String!
}

type Distribution @entity {
  id: ID!
  index: BigInt!
  recipientId: String!
  amount: BigInt!
  merkleProof: [Bytes!]
}